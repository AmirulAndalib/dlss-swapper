<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net7.0-windows10.0.19041.0</TargetFramework>
    <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
    <RootNamespace>DLSS_Swapper</RootNamespace>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Platforms>x64</Platforms>
    <RuntimeIdentifiers>win10-x64</RuntimeIdentifiers>
    <PublishProfile>win10-$(Platform).pubxml</PublishProfile>
    <UseWinUI>true</UseWinUI>
    <EnableMsixTooling>true</EnableMsixTooling>
    <!--<WindowsPackageType>None</WindowsPackageType>-->
    <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
    <Configurations>Debug;Release;Debug_WindowsStore;Release_WindowsStore</Configurations>
  </PropertyGroup>

  <!-- If we are building for Windows Store set the WINDOWS_STORE defined constant -->
  <PropertyGroup Condition="'$(Configuration)'=='Release' Or '$(Configuration)'=='Release_WindowsStore'">
    <Optimize>True</Optimize>
  </PropertyGroup>

  <!-- If we are building for Windows Store set the WINDOWS_STORE defined constant -->
  <PropertyGroup Condition="'$(Configuration)'=='Debug_WindowsStore' Or '$(Configuration)'=='Release_WindowsStore'">
    <DefineConstants>WINDOWS_STORE</DefineConstants>
  </PropertyGroup>

  <!-- If we are building for the Windows Store copy the packaged launchSettings.json -->
  <Target Name="PreBuildPackaged" BeforeTargets="PreBuildEvent" Condition="'$(DefineConstants.Contains(`WINDOWS_STORE`))' == 'true'">
    <Exec Command="xcopy &quot;$(ProjectDir)Properties\launchSettings.Packaged.json&quot; &quot;$(ProjectDir)Properties\launchSettings.json&quot; /Y" />
  </Target>

  <!-- If we are not building for the Windows Store copy the unpackaged launchSettings.json -->
  <Target Name="PreBuildUnpackged" BeforeTargets="PreBuildEvent" Condition="'$(DefineConstants.Contains(`WINDOWS_STORE`))' == 'false'">
    <Exec Command="xcopy &quot;$(ProjectDir)Properties\launchSettings.Unpackaged.json&quot; &quot;$(ProjectDir)Properties\launchSettings.json&quot; /Y" />
  </Target>

  <ItemGroup>
    <None Remove="Assets\Fonts\Segoe-Fluent-Icons.ttf" />
    <None Remove="Properties\launchSettings.json" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="Assets\SplashScreen.scale-200.png" />
    <Content Include="Assets\LockScreenLogo.scale-200.png" />
    <Content Include="Assets\Square150x150Logo.scale-200.png" />
    <Content Include="Assets\Square44x44Logo.scale-200.png" />
    <Content Include="Assets\Square44x44Logo.targetsize-24_altform-unplated.png" />
    <Content Include="Assets\StoreLogo.png" />
    <Content Include="Assets\Wide310x150Logo.scale-200.png" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AsyncAwaitBestPractices" Version="6.0.6" />
    <PackageReference Include="AsyncAwaitBestPractices.MVVM" Version="6.0.6" />
    <PackageReference Include="CommunityToolkit.Mvvm" Version="8.0.0" />
    <PackageReference Include="CommunityToolkit.WinUI.UI" Version="7.1.2" />
    <PackageReference Include="CommunityToolkit.WinUI.UI.Controls.Markdown" Version="7.1.2" />
    <PackageReference Include="Humanizer" Version="2.14.1" />
    <PackageReference Include="Microsoft.Win32.Registry" Version="5.0.0" />
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.2.221116.1" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.22621.755" />
    <PackageReference Include="Refractored.MvvmHelpers" Version="1.6.2" />
    <PackageReference Include="sqlite-net-pcl" Version="1.8.116" />
    <PackageReference Include="Serilog" Version="2.12.0" />
    <PackageReference Include="Serilog.Sinks.Debug" Version="2.0.0" />
    <PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
    <PackageReference Include="System.Management" Version="7.0.0" />
    <PackageReference Include="YamlDotNet" Version="12.0.2" />
    <Manifest Include="$(ApplicationManifest)" />
  </ItemGroup>

  <!-- 
  Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
  Tools extension to be activated for this project even if the Windows App SDK Nuget
  package has not yet been restored.
  -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>

  <!-- 
  Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution 
  Explorer "Package and Publish" context menu entry to be enabled for this project even if 
  the Windows App SDK Nuget package has not yet been restored.
  -->
  <PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
  </PropertyGroup>
</Project>
